(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{396:function(t,s,e){"use strict";e.r(s);var i=e(42),a=Object(i.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h1",{attrs:{id:"dva-md"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dva-md"}},[this._v("#")]),this._v(" dva.md")]),this._v(" "),s("p",[this._v("如果yield call的是一个Promise对象，那只有在Promise返回的是resolve方法的情况下，下面跟着的yield put及后面的代码才会执行，若返回了rejector则后面的代码则全部停止执行")]),this._v(" "),s("p",[this._v("这里还试了一下调用axios异步插件进行接口访问，结果为不论访问成功失败都会继续执行后面的代码，若想访问接口失败后不继续后面的代码需要在axios成功或失败的方法中返回值，然后在外面判断这个值是否正确然后再决定是否继续执行")])])}),[],!1,null,null,null);s.default=a.exports}}]);