(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{416:function(n,r,s){"use strict";s.r(r);var a=s(42),e=Object(a.a)({},(function(){var n=this,r=n.$createElement,s=n._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"常用array处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用array处理"}},[n._v("#")]),n._v(" 常用array处理")]),n._v(" "),s("p",[n._v("一、concat()\nconcat() 方法用于连接两个或多个数组。该方法不会改变现有的数组，仅会返回被连接数组的一个副本。\nvar arr1 = [1,2,3];\nvar arr2 = [4,5];\nvar arr3 = arr1.concat(arr2);\nconsole.log(arr1); //[1, 2, 3]\nconsole.log(arr3); //[1, 2, 3, 4, 5]")]),n._v(" "),s("p",[n._v("二、join()\njoin() 方法用于把数组中的所有元素放入一个字符串。元素是通过指定的分隔符进行分隔的，默认使用','号分割，不改变原数组。\nvar arr = [2,3,4];\nconsole.log(arr.join()); //2,3,4\nconsole.log(arr); //[2, 3, 4]")]),n._v(" "),s("p",[n._v("三、push()\npush() 方法可向数组的末尾添加一个或多个元素，并返回新的长度。末尾添加，返回的是长度，会改变原数组。\nvar a = [2,3,4];\nvar b = a.push(5);\nconsole.log(a); //[2,3,4,5]\nconsole.log(b); //4\npush方法可以一次添加多个元素push(data1,data2....)")]),n._v(" "),s("p",[n._v("四、pop()\npop() 方法用于删除并返回数组的最后一个元素。返回最后一个元素，会改变原数组。\nvar arr = [2,3,4];\nconsole.log(arr.pop()); //4\nconsole.log(arr); //[2,3]")]),n._v(" "),s("p",[n._v("五、shift()\nshift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。返回第一个元素，改变原数组。\nvar arr = [2,3,4];\nconsole.log(arr.shift()); //2\nconsole.log(arr); //[3,4]")]),n._v(" "),s("p",[n._v("六、unshift()\nunshift() 方法可向数组的开头添加一个或更多元素，并返回新的长度。返回新长度，改变原数组。\nvar arr = [2,3,4,5];\nconsole.log(arr.unshift(3,6)); //6\nconsole.log(arr); //[3, 6, 2, 3, 4, 5]\ntip:该方法可以不传参数,不传参数就是不增加元素。")]),n._v(" "),s("p",[n._v("七、slice()\n返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。返回选定的元素，该方法不会修改原数组。\nvar arr = [2,3,4,5];\nconsole.log(arr.slice(1,3)); //[3,4]\nconsole.log(arr); //[2,3,4,5]")]),n._v(" "),s("p",[n._v("八、splice()\nsplice() 方法可删除从 index 处开始的零个或多个元素，并且用参数列表中声明的一个或多个值来替换那些被删除的元素。如果从 arrayObject 中删除了元素，则返回的是含有被删除的元素的数组。splice() 方法会直接对数组进行修改。\nvar a = [5,6,7,8];\nconsole.log(a.splice(1,0,9)); //[]\nconsole.log(a); // [5, 9, 6, 7, 8]\nvar b = [5,6,7,8];\nconsole.log(b.splice(1,2,3)); //[6, 7]\nconsole.log(b); //[5, 3, 8]")]),n._v(" "),s("p",[n._v('九、substring() 和 substr()\n相同点：如果只是写一个参数，两者的作用都一样：都是是截取字符串从当前下标以后直到字符串最后的字符串片段。\nsubstr(startIndex);\nsubstring(startIndex);\nvar str = \'123456789\';\nconsole.log(str.substr(2)); // "3456789"\nconsole.log(str.substring(2)) ;// "3456789"\n不同点：第二个参数\nsubstr（startIndex,lenth）： 第二个参数是截取字符串的长度（从起始点截取某个长度的字符串）；\nsubstring（startIndex, endIndex）： 第二个参数是截取字符串最终的下标 （截取2个位置之间的字符串,‘含头不含尾\'）。\nconsole.log("123456789".substr(2,5)); // "34567"\nconsole.log("123456789".substring(2,5)) ;// "345"')]),n._v(" "),s("p",[n._v("十、sort 排序\n按照 Unicode code 位置排序，默认升序\nvar fruit = ['cherries', 'apples', 'bananas'];\nfruit.sort(); // ['apples', 'bananas', 'cherries']\nvar scores = [1, 10, 21, 2];\nscores.sort(); // [1, 10, 2, 21]")]),n._v(" "),s("p",[n._v("十一、reverse()\nreverse() 方法用于颠倒数组中元素的顺序。返回的是颠倒后的数组，会改变原数组。\nvar arr = [2,3,4];\nconsole.log(arr.reverse()); //[4, 3, 2]\nconsole.log(arr); //[4, 3, 2]")]),n._v(" "),s("p",[n._v("十二、indexOf 和 lastIndexOf\n都接受两个参数：查找的值、查找起始位置\n不存在，返回 -1 ；存在，返回位置。indexOf 是从前往后查找， lastIndexOf 是从后往前查找。")]),n._v(" "),s("p",[n._v("十三、删除数组第一个元素，并返回新数组，不改变原有数组")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("1、slice() 浅克隆去复制 arr 元素从第二个开始到最后一个\n\nvar arr = [1, 2, 3, 4, 5];\nvar newArr = arr.slice(1);\nconsole.log(newArr);\n2、splice()的删除功能\n\nvar arr = [1, 2, 3, 4, 5];\nvar newArr = arr.slice(0);\nnewArr.splice(0, 1);\n\n3、filter() 过滤下标，返回满足不等0的下标的元素\n\nvar arr = [1, 2, 3, 4, 5];\nvar newArr = arr.filter((val, index, arr) => {\n    return index !== 0;\n})\n\n4、shift() 删除数组的首个元素\n\nvar arr = [1, 2, 3, 4, 5];\nvar newArr = arr.slice(0);\nnewArr.shift();\n5、join() 字符串连接后，用split()进行分离为新数组\n\nvar arr = [1, 2, 3, 4, 5];\nvar newArr = arr.join().split(',').map(Number); // arr.map(Number)：字符串元素转为数字元素\nnewArr.shift();\n6、apply() 数组参数化后放入[]数组\n\nvar arr = [1, 2, 3, 4, 5];\nvar newArr = [];\n[].push.apply(newArr, arr);\nnewArr.shift();\n7、concat() 数组链接出新数组\n\nvar arr = [1, 2, 3, 4, 5];\nvar newArr = arr.concat();\nnewArr.shift();\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br")])])])}),[],!1,null,null,null);r.default=e.exports}}]);